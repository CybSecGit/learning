version: '3.8'

services:
  # Main development environment container
  learning:
    build:
      context: .
      dockerfile: Dockerfile
    image: learning-platform:latest
    container_name: learning-platform
    volumes:
      - .:/app
    ports:
      - "8888:8888"  # Jupyter Lab
      - "3000:3000"  # Docusaurus
      - "8000:8000"  # General web server
      - "5432:5432"  # PostgreSQL
      - "6379:6379"  # Redis
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
    depends_on:
      - postgres
      - redis
    networks:
      - learning-network
    stdin_open: true
    tty: true
    command: /bin/bash

  # PostgreSQL database service
  postgres:
    image: postgres:16-alpine
    container_name: learning-postgres
    environment:
      - POSTGRES_USER=learning_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - POSTGRES_DB=learning_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./course/resources/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - learning-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U learning_user -d learning_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis caching and message broker service
  redis:
    image: redis:7-alpine
    container_name: learning-redis
    networks:
      - learning-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  learning-network:
    driver: bridge

# Usage:
#
# Build and start all services:
# docker-compose up --build -d
#
# Stop all services:
# docker-compose down
#
# Enter the main learning container:
# docker-compose exec learning bash
#
# View logs for all services:
# docker-compose logs -f
#
# Clean up all Docker resources (containers, images, volumes, networks):
# docker-compose down -v --rmi all
# docker rmi learning-platform
